#!/usr/bin/python
# encoding=UTF-8

# Copyright © 2009-2015 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import argparse
import sys

import leechy

leechy.register_all_plugins()

argparser = argparse.ArgumentParser()
argparser.add_argument('--debug', '-D', action='store_true')
argparser.add_argument('urls', metavar='<url>', nargs='+', help='URL to download')
options = argparser.parse_args(sys.argv[1:])

for uri in options.urls:
    leechy.log_info('>>> %s' % uri)
    try:
        leechy.dispatch(uri, debug=options.debug)
    except leechy.NoMatchingPlugin:
        leechy.log_error('Plugin not found.')
    except leechy.FileNotFound:
        leechy.log_error('File not found.')
    except leechy.SimultaneousDownload:
        leechy.log_error('Too many simultaneous downloads. Please try again later.')
    except leechy.TemporaryFailure:
        leechy.log_error('Temporary server failure. Please try again later.')
    except leechy.WgetFailure:
        leechy.log_error('Download failed. Maybe try again later?')
    except leechy.ApiError as ex:
        msg = 'API error (code=%s)' % (ex.code,)
        if (ex.dump_name != None):
            msg += ' Last page dumped into: %s' % (ex.dump_name,)
        leechy.log_error(msg)
        del msg
        sys.exit(1)
    except KeyboardInterrupt:
        leechy.log_error('Interrupted by user.')
        sys.exit(2)
    leechy.log_info('')

# vim:ts=4 sw=4 et
